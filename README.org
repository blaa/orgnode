* Orgnode
[[http://members.optusnet.com.au/~charles57/GTD/orgnode.html][»Orgnode - reading org-mode in Python«]] was originally developed by
[[http://members.optusnet.com.au/~charles57/GTD/][Charles Cave]]. This is [[https://bitbucket.org/tkf/orgnode][a fork by Takafumi Arakaki]], with some minor
fixes by Albin Stjerna.
* How to use
Just set the =Orgnode.py= where your python can import this module.

Some samples (directly from Cave's version):
#+begin_src python
import Orgnode, datetime

today = datetime.date.today()
print "Daily plan for", today
print "-------------------------\n"

filename = "c:/charles/GTD/newgtd.org"
nodelist = Orgnode.makelist(filename)

for n in nodelist:
    if n.Scheduled() == today:
         print "[ ] %s (%s)" % (n.Heading(), n.Tag() )
#+end_src

* Tests
Orgnode uses [[https://nose.readthedocs.org/en/latest/][nose]] for unit tests, thanks to Arakaki. To run them, just
execute =nosetests= in the Orgnode directory. You do need to symlink
in orgnode.py into the tests directory for it to work, though.
* Differences to Arakaki's and Cave's versions
So far, the only thing I've really done is adding a few test cases and
fixing a bug in one of the regular expressions that would produce
incorrect results when a TODO keyword appeared inside a paragraph. I
do, however, intend to use orgnode, and improve on it when I find
bugs.

As far as I can tell, Arakaki's verison is a significant improvement
over Cave's, fixing proper unicode handling among other things.


example_orgheader.py:
Creates shell reminders upon login like emacs Agenda view. Annotated example:

PROJECTS:
  Project 1                   (TODO=1)   # PROJECTS with their TODO/DONE tasks summed up
  PhD                         (TODO=8)
  Shopping                    (DONE=6 TODO=3)

# Past deadlines come first:
D DUE      TODO 103 days ago         Reklamować monitor LCD illama
D DUE           2 days ago           Uporządkować Avalaca i Aardaleę

S          TODO in 2 days            FIX an error # S for SCHEDULED
D          TODO in 4 days            Configure the server # D for incoming DEADLINE

It's alternative mode generate one line summary:
1-->2 44/56

One task today, 2 incoming. In total 44 tasks needs to be done out of 56.
